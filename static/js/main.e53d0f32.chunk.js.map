{"version":3,"sources":["components/WorldGlobe/WorldGlobe.jsx","components/WorldMap/WorldMap.js","components/DataTable/DataTable.jsx","components/WorldTotals/WorldTotals.jsx","components/Graphs/Graphs.jsx","App.js","serviceWorker.js","index.js"],"names":["WorldGlobe","props","globeEf","React","createRef","colorScale","d3","state","isLoading","transitionDuration","isHovered","maxConfirmed","this","data","reduce","max","country","Math","confirmed","domain","setState","current","pointOfView","lat","lng","altitude","renderGraph","width","height","ref","globeImageUrl","bumpImageUrl","showGraticules","polygonsData","polygonAltitude","i","polygonCapColor","polygonSideColor","polygonStrokeColor","polygonLabel","name","code","deaths","recovered","onPolygonHover","polygonsTransitionDuration","onPolygonClick","Component","WorldMap","mapboxElRef","useRef","useSWR","url","fetch","then","json","map","point","index","type","properties","id","province","stats","geometry","coordinates","longitude","latitude","useEffect","mapboxgl","Map","container","style","center","zoom","minZoom","maxZoom","addControl","NavigationControl","once","addSource","features","addLayer","source","paint","lastId","info","Popup","closeButton","closeOnClick","on","e","getCanvas","cursor","slice","provincetext","HTML","abs","lngLat","setLngLat","setHTML","addTo","undefined","remove","className","accessToken","labelId","WorldTotals","totalConfirmed","a","b","totalRecovered","totalDeaths","document","getElementById","innerHTML","Typography","Graphs","rawData","margin","top","right","left","bottom","vertical","horizontal","dataKey","tickLine","contentStyle","background","stroke","dot","strokeWidth","count","createData","confirmedY","deathsY","recoveredY","rows","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","label","minWidth","format","value","toLocaleString","headCell","TableCell","key","align","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","DataTable","handleChange","search","target","filter","searchingFor","length","handleRequestSort","isAsc","res","result","found","foundY","changeC","changeD","changeR","x","toLowerCase","includes","descendingComparator","array","comparator","stabilizedThis","el","sort","Paper","elevation","TableContainer","Input","onChange","placeholder","Table","aria-labelledby","size","aria-label","rowCount","TableBody","stableSort","getComparator","row","component","scope","color","App","handleClose","open","loaded","canvasWidth","window","innerWidth","canvasHeight","innerHeight","error","console","log","addEventListener","windowHeight","darkTheme","createMuiTheme","palette","theme","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","AppBar","position","Toolbar","variant","CssBaseline","Grid","item","sm","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e53d0f32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Globe from \"react-globe.gl\";\r\nimport * as d3 from \"d3\";\r\nimport \"./WorldGlobe.css\";\r\n\r\nexport default class WorldGlobe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.globeEf = React.createRef();\r\n    this.colorScale = d3.scaleSequentialSqrt(d3.interpolateYlOrRd);\r\n    this.state = {\r\n      isLoading: true,\r\n      transitionDuration: 300,\r\n      isHovered: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const maxConfirmed = this.props.data.reduce(\r\n      (max, country) => Math.max(max, country.confirmed),\r\n      0\r\n    );\r\n    this.colorScale.domain([0, maxConfirmed]);\r\n    this.setState({ isLoading: false });\r\n    this.globeEf.current.pointOfView({ lat: 39.6, lng: -98.5, altitude: 1.6 });\r\n    this.props.renderGraph(\"Canada\");\r\n  }\r\n  render() {\r\n    const { renderGraph, data, width, height } = this.props;\r\n    const { isLoading, transitionDuration, isHovered } = this.state;\r\n    return (\r\n      <Globe\r\n        ref={this.globeEf}\r\n        globeImageUrl='//unpkg.com/three-globe/example/img/earth-blue-marble.jpg'\r\n        bumpImageUrl='//unpkg.com/three-globe/example/img/earth-topology.png'\r\n        showGraticules\r\n        polygonsData={data}\r\n        polygonAltitude={i => i === isHovered ? 0.12 : 0.06}\r\n        polygonCapColor={\r\n          isLoading\r\n            ? \"#ffffaa\"\r\n            : i => (i === isHovered ? \"lightgreen\" : this.colorScale(i.confirmed))\r\n        }\r\n        polygonSideColor={() => \"rgba(0, 100, 0, 0.15)\"}\r\n        polygonStrokeColor={() => \"#111\"}\r\n        polygonLabel={({ name, code, confirmed, deaths, recovered }) => `\r\n        <div class = \"card\">\r\n          <b>${name} (${code})</b>\r\n          ${`\r\n              <br />\r\n              Confirmed: <i>${confirmed}</i><br />\r\n              ${recovered ? `Recovered: <i>${recovered}</i><br/>` : \"\"}\r\n              Deaths: <i>${deaths}</i>\r\n            `}\r\n        </div>`}\r\n        onPolygonHover={i => this.setState({ isHovered: i })}\r\n        polygonsTransitionDuration={transitionDuration}\r\n        onPolygonClick={({ name }) => renderGraph(name)}\r\n        height={height / 1.7}\r\n        width={width/2.5}\r\n      />\r\n    );\r\n  }\r\n}","import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./WorldMap.scss\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport useSWR from \"swr\";\r\nmapboxgl.accessToken =\r\n    \"pk.eyJ1IjoiZ3poMTIiLCJhIjoiY2s5ZXdjYnFoMDZ2NTNrbzJoNDkwbWlobCJ9.rgRhGIRKnj2YIWrOr4v4MQ\";\r\n\r\nexport default function WorldMap() {\r\n    const fetcher = (url) =>\r\n        fetch(url)\r\n            .then((data) => data.json())\r\n            .then((data) =>\r\n                data.map((point, index) => ({\r\n                    type: \"Feature\",\r\n                    properties: {\r\n                        id: index,\r\n                        country: point.country,\r\n                        province: point.province,\r\n                        confirmed: point.stats.confirmed,\r\n                        deaths: point.stats.deaths,\r\n                        recovered: point.stats.recovered,\r\n                    },\r\n                    geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [\r\n                            point.coordinates.longitude,\r\n                            point.coordinates.latitude,\r\n                        ],\r\n                    },\r\n                }))\r\n            );\r\n    const mapboxElRef = useRef(null);\r\n    const { data } = useSWR(\"https://disease.sh/v2/jhucsse\", fetcher);\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapboxElRef.current,\r\n            style: \"mapbox://styles/mapbox/dark-v10\",\r\n            center: [-10, 40],\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            zoom: 2.5,\r\n            minZoom: 2,\r\n            maxZoom: 8,\r\n        });\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n        map.once(\"load\", function () {\r\n            map.addSource(\"points\", {\r\n                type: \"geojson\",\r\n                data: {\r\n                    type: \"FeatureCollection\",\r\n                    features: data,\r\n                },\r\n            });\r\n            map.addLayer({\r\n                id: \"circles\",\r\n                source: \"points\",\r\n                type: \"circle\",\r\n                paint: {\r\n                    \"circle-opacity\": 0.8,\r\n                    \"circle-stroke-width\": 1,\r\n                    \"circle-stroke-color\": \"white\",\r\n                    \"circle-radius\": [\r\n                        \"interpolate\",\r\n                        [\"linear\"],\r\n                        [\"get\", \"confirmed\"],\r\n                        1,\r\n                        3,\r\n                        1000,\r\n                        6,\r\n                        3500,\r\n                        10,\r\n                        7000,\r\n                        16,\r\n                        12000,\r\n                        22,\r\n                        100000,\r\n                        50,\r\n                    ],\r\n                    \"circle-color\": [\r\n                        \"interpolate\",\r\n                        [\"linear\"],\r\n                        [\"get\", \"confirmed\"],\r\n                        1,\r\n                        \"#f0fff1\",\r\n                        5000,\r\n                        \"#c2f8cb\",\r\n                        10000,\r\n                        \"#b3e9c7\",\r\n                        25000,\r\n                        \"#8367c7\",\r\n                        50000,\r\n                        \"#5603ad\",\r\n                        75000,\r\n                        \"#2d075a\",\r\n                    ],\r\n                },\r\n            });\r\n        });\r\n        const info = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n        });\r\n\r\n        let lastId;\r\n\r\n        map.on(\"mousemove\", \"circles\", (e) => {\r\n            map.getCanvas().style.cursor = \"pointer\";\r\n            const id = e.features[0].properties.id;\r\n\r\n            if (id !== lastId) {\r\n                lastId = id;\r\n                const {\r\n                    country,\r\n                    province,\r\n                    confirmed,\r\n                    deaths,\r\n                    recovered,\r\n                } = e.features[0].properties;\r\n                const coordinates = e.features[0].geometry.coordinates.slice();\r\n                const provincetext = province === \"null\" ? \"\" : `<p>${province}, `;\r\n                const HTML = `\r\n          <p><b>${provincetext}</b><b> ${country}</b></p>\r\n          <p>Number of Confirmed Cases: ${confirmed}</p>\r\n          <p>Number of Deaths: ${deaths}</p>\r\n          <p>Number of People Recovered: ${recovered}`;\r\n                // Ensure that if the map is zoomed out such that multiple\r\n                // copies of the feature are visible, the popup appears\r\n                // over the copy being pointed to.\r\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                }\r\n                info.setLngLat(coordinates).setHTML(HTML).addTo(map);\r\n            }\r\n        });\r\n\r\n        map.on(\"mouseleave\", \"circles\", function () {\r\n            lastId = undefined;\r\n            map.getCanvas().style.cursor = \"\";\r\n            info.remove();\r\n        });\r\n    }, [data]);\r\n    return (\r\n        <div className=\"WorldMap\">\r\n            <div className=\"mapContainer\">\r\n                <div className=\"mapBox\" ref={mapboxElRef} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./DataTable.css\";\r\nimport { Input, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel, Paper, Grid } from \"@material-ui/core\";\r\nimport { data } from \"../../data/data.json\";\r\nlet labelId;\r\nlet count = 0;\r\n\r\nfunction createData(country, confirmed, confirmedY, deaths, deathsY, recovered, recoveredY) {\r\n    return { country, confirmed, confirmedY, deaths, deathsY, recovered, recoveredY };\r\n}\r\nconst rows = [];\r\nfunction EnhancedTableHead(props) {\r\n    const headCells = [\r\n        { id: 'country', label: 'Country', minWidth: 100, format: (value) => value.toLocaleString(), },\r\n        { id: 'confirmed', label: 'Confirmed', minWidth: 100, format: (value) => value.toLocaleString(), },\r\n        { id: 'recovered', label: 'Recoveries', minWidth: 100, format: (value) => value.toLocaleString(), },\r\n        { id: 'deaths', label: 'Deaths', minWidth: 100, format: (value) => value.toLocaleString(), },\r\n    ];\r\n\r\n    const { order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'desc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className=\"visuallyHidden\">\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n\r\n}\r\nexport default class DataTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order: \"desc\",\r\n            search: \"\",\r\n            orderBy: \"confirmed\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    data.map(country => {\r\n                        const { name } = country;\r\n                        const found = result[name] && result[name].slice(-1)[0];\r\n                        const foundY = result[name] && result[name].slice(-2)[0];\r\n                        const changeC = (found ? found.confirmed : 0) - (foundY ? foundY.confirmed : 0);\r\n                        const changeD = (found ? found.deaths : 0) - (foundY ? foundY.deaths : 0);\r\n                        const changeR = (found ? found.recovered : 0) - (foundY ? foundY.recovered : 0);\r\n                        rows[count] = createData(name, found ? found.confirmed : 0, \" (+\" + changeC + \")\", found ? found.deaths : 0, \" (+\" + changeD + \")\", found ? found.recovered : 0, \" (+\" + changeR + \")\");\r\n                        count++;\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    handleChange = (event, country) => {\r\n        this.setState({ search: event.target.value });\r\n        if (rows.filter(this.searchingFor(event.target.value)) == \"\") {\r\n            rows[180] = createData(\"No Nations Found\");\r\n        }\r\n        else if (rows.filter(this.searchingFor(event.target.value)).length !== 1) {\r\n            delete rows[180];\r\n        }\r\n    };\r\n\r\n    handleRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'desc';\r\n        if (property === \"country\" && (!(this.state.orderBy === \"country\"))) {\r\n            this.setState({ order: \"asc\" });\r\n        }\r\n        else {\r\n            this.setState({ order: isAsc ? \"asc\" : \"desc\" });\r\n        }\r\n        this.setState({ orderBy: property });\r\n    };\r\n\r\n    searchingFor(search) {\r\n        return function (x) {\r\n            if (x.country !== \"No Nations Found\") {\r\n                return x.country.toLowerCase().includes(search.toLowerCase() || search);\r\n            }\r\n            else {\r\n                return x.country;\r\n            }\r\n        }\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        else if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"root\">\r\n                <Paper elevation={3} className=\"paper\">\r\n                    <TableContainer className=\"container\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Search...\"\r\n                        />\r\n                        <Table\r\n                            id=\"myTable\"\r\n                            className=\"table\"\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={\"small\"}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <EnhancedTableHead\r\n                                className=\"classes\"\r\n                                order={this.state.order}\r\n                                orderBy={this.state.orderBy}\r\n                                onRequestSort={this.handleRequestSort}\r\n                                rowCount={rows.length}\r\n                            />\r\n                            <TableBody>\r\n                                {this.stableSort(rows, this.getComparator(this.state.order, this.state.orderBy))\r\n                                    .filter(this.searchingFor(this.state.search))\r\n                                    .map((row, index) => {\r\n                                        labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow>\r\n                                                <TableCell className=\"country\" component=\"th\" id={labelId} scope=\"row\" >{row.country}</TableCell>\r\n                                                <TableCell style={{ color: \"#b197fc\" }} align=\"left\">{row.confirmed}{row.confirmedY}</TableCell>\r\n                                                <TableCell style={{ color: \"lightgreen\" }} className=\"recoveries\" align=\"left\">{row.recovered}{row.recoveredY}</TableCell>\r\n                                                <TableCell style={{ color: \"#ff6b6b\" }} className=\"deaths\" align=\"left\">{row.deaths}{row.deathsY}</TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./WorldTotals.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n\r\nexport default class WorldTotals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const totalConfirmed = this.props.data.reduce(\r\n            (a, b) => a + b.confirmed,\r\n            0\r\n        );\r\n        const totalRecovered = this.props.data.reduce(\r\n            (a, b) => a + b.recovered,\r\n            0\r\n        );\r\n        const totalDeaths = this.props.data.reduce(\r\n            (a, b) => a + b.deaths,\r\n            0\r\n        );\r\n        document.getElementById(\"totalConfirmed\").innerHTML = `${totalConfirmed}`;\r\n        document.getElementById(\"totalRecovered\").innerHTML = `${totalRecovered}`;\r\n        document.getElementById(\"totalDeaths\").innerHTML = `${totalDeaths}`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"global-info-container\">\r\n                <Typography className=\"total-text\"><span className=\"confirmed\">Confirmed: </span><span id=\"totalConfirmed\"></span></Typography>\r\n                <Typography className=\"total-text\"><span className=\"recovered\">Recovered: </span><span id=\"totalRecovered\"></span></Typography>\r\n                <Typography className=\"total-text\"><span className=\"deaths\">Deaths: </span><span id=\"totalDeaths\"></span></Typography>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nimport \"./Graphs.css\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default class Graphs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    render() {\r\n        const { rawData, name } = this.props;\r\n        return (\r\n            <div className=\"graph-container\">\r\n                <Typography className=\"graph-title\">{name}</Typography>\r\n                <ResponsiveContainer>\r\n                    <LineChart\r\n                        data={rawData[name]}\r\n                        margin={{ top: 20, right: 65, left: 20, bottom: 5 }}\r\n                    >\r\n                        <CartesianGrid vertical={false} horizontal={false} />\r\n                        <XAxis\r\n                            dataKey=\"date\"\r\n                            tickLine={false}\r\n                        />\r\n                        <YAxis\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            contentStyle={{ background: \"transparent\" }}\r\n                        />\r\n                        <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"confirmed\"\r\n                            name=\"Confirmed\"\r\n                            stroke=\"#b197fc\"\r\n                            dot={false}\r\n                            strokeWidth={3}\r\n                        />\r\n                        <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"recovered\"\r\n                            name=\"Recovered\"\r\n                            stroke=\"lightgreen\"\r\n                            dot={false}\r\n                            strokeWidth={3}\r\n                        />\r\n                        <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"deaths\"\r\n                            name=\"Deaths\"\r\n                            stroke=\"#ff6b6b\"\r\n                            dot={false}\r\n                            strokeWidth={3}\r\n                        />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport WorldGlobe from \"./components/WorldGlobe/WorldGlobe\";\n\nimport WorldMap from \"./components/WorldMap/WorldMap\";\n\nimport WorldTotals from \"./components/WorldTotals/WorldTotals\";\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, AppBar, Toolbar, Typography, Paper, Grid, MuiThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\n\nimport Graphs from \"./components/Graphs/Graphs\"\n\nimport { data } from \"./data/data\";\n\nimport DataTable from \"./components/DataTable/DataTable\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      loaded: true,\n      rawData: [],\n      data: [],\n      name: \"\",\n      canvasWidth: window.innerWidth,\n      canvasHeight: window.innerHeight\n    };\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n  }\n\n  componentDidMount() {\n    fetch(\"https://pomber.github.io/covid19/timeseries.json\")\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            loaded: false,\n            rawData: result,\n            data: data.map(country => {\n              const { name } = country;\n              const found = result[name] && result[name].slice(-1)[0];\n              return {\n                ...country,\n                confirmed: found ? found.confirmed : 0,\n                deaths: found ? found.deaths : 0,\n                recovered: found ? found.recovered : 0\n              };\n            })\n          });\n        },\n        error => {\n          this.setState({ loaded: true }, console.log);\n        }\n      );\n    window.addEventListener(\"resize\", ({ target }) =>\n      this.setState({\n        canvasWidth: target.innerWidth,\n        windowHeight: target.innerHeight\n      })\n    );\n  }\n\n  render() {\n    const { loaded, data, rawData, name, canvasHeight, canvasWidth } = this.state;\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: \"dark\"\n      }\n    });\n    const { open } = this.state;\n    return (\n      <div>\n        <MuiThemeProvider theme={darkTheme}>\n          <Dialog\n            open={open}\n            onClose={this.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Covid-19 Dashboard\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n              Our website features a 3d globe detailing broad country specific statistics, a graphical timeline of the coronavirus outbreak, a 2d map detailing local data (where possible), and a raw data table.\n              <br></br>\n              <br></br>\n              When using the 3d globe, hover over a country to view statistics for that respective country. To generate a graphical timeline of the coronavirus outbreak in a country, double click on that respective country.\n              <br></br>\n              <br></br>\n              When using the 2d map, hover over a datapoint to view statistics for its respective location.\n              <br></br>\n              <br></br>\n              The raw data table provides coronavirus statistics along with daily updates. It includes a search bar, where you can search for a specific country, however if it is not found, it will display “No Nations Found.” In addition, you may sort the data in various ways, for example, in increasing or decreasing order by nation, confirmed cases, confirmed deaths, or confirmed recoveries.\n              <br></br>\n              <br></br>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Close\n          </Button>\n            </DialogActions>\n          </Dialog>\n          <AppBar color={\"transparent\"} position=\"static\" className=\"AppBar\">\n            <Toolbar>\n              <Typography variant=\"h6\">Covid-19 Dashboard</Typography>\n              {loaded ? null : (\n                <WorldTotals\n                  data={data}\n                />\n              )}\n            </Toolbar>\n          </AppBar>\n          <CssBaseline></CssBaseline>\n          <div className=\"graph-div\">\n            <Paper elevation={3} className=\"worldGlobe-container\">\n              {loaded ? null : (\n                <WorldGlobe\n                  width={canvasWidth}\n                  height={canvasHeight}\n                  data={data}\n                  renderGraph={name => this.setState({ name })}\n                />\n              )}\n            </Paper>\n            <div className=\"graph-container\">\n              <Paper elevation={3} className=\"Paper\">\n                {loaded ? null : (\n                  <Graphs\n                    rawData={rawData}\n                    name={name}\n                  />\n                )}\n              </Paper>\n            </div>\n          </div>\n          <Grid container>\n            <Grid item sm={12}>\n              <Paper elevation={3} className=\"Paper\">\n                {loaded ? null : (\n                  <WorldMap></WorldMap>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item sm={12}>\n              <Paper elevation={3} className=\"table-container\">\n                {loaded ? null : (\n                  <DataTable></DataTable>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}